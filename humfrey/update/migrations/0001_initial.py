# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-15 16:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import humfrey.update.fields
import humfrey.update.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sparql', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=4096, verbose_name='Base URL')),
                ('username', models.CharField(max_length=128)),
                ('password', humfrey.update.fields.EncryptedCharField(max_length=4096)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UpdateDefinition',
            fields=[
                ('slug', models.SlugField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True)),
                ('cron_schedule', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('idle', 'Idle'), ('queued', 'Queued'), ('active', 'Active')], default='idle', max_length=10)),
                ('last_queued', models.DateTimeField(blank=True, null=True)),
                ('last_started', models.DateTimeField(blank=True, null=True)),
                ('last_completed', models.DateTimeField(blank=True, null=True)),
                ('depends_on', models.ManyToManyField(blank=True, to='update.UpdateDefinition')),
            ],
            options={
                'ordering': ('title',),
                'permissions': (('view_updatedefinition', 'Can view the update definition'), ('execute_updatedefinition', 'Can perform an update'), ('administer_updatedefinition', 'Can administer an update definition'), ('viewlogs_updatedefinition', 'Can view the logs for an update definition')),
            },
        ),
        migrations.CreateModel(
            name='UpdateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forced', models.BooleanField(default=False)),
                ('trigger', models.CharField(blank=True, max_length=80)),
                ('log_level', models.SmallIntegerField(blank=True, null=True)),
                ('queued', models.DateTimeField(blank=True, null=True)),
                ('started', models.DateTimeField(blank=True, null=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('update_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='update_log', to='update.UpdateDefinition')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_log', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, humfrey.update.models.WithLevels),
        ),
        migrations.CreateModel(
            name='UpdateLogRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField()),
                ('_record', models.TextField()),
                ('log_level', models.SmallIntegerField()),
                ('update_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='update.UpdateLog')),
            ],
            bases=(models.Model, humfrey.update.models.WithLevels),
        ),
        migrations.CreateModel(
            name='UpdatePipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('stores', models.ManyToManyField(to='sparql.Store')),
                ('update_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipelines', to='update.UpdateDefinition')),
            ],
        ),
        migrations.CreateModel(
            name='UpdateVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('value', models.TextField()),
                ('update_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='update.UpdateDefinition')),
            ],
        ),
        migrations.AddField(
            model_name='updatedefinition',
            name='last_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='update.UpdateLog'),
        ),
        migrations.AddField(
            model_name='updatedefinition',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_updates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='updatedefinition',
            name='periodic_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.PeriodicTask'),
        ),
    ]
